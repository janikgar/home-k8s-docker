services:
  grafana:
    container_name: grafana
    image: grafana/grafana@sha256:74144189b38447facf737dfd0f3906e42e0776212bf575dc3334c3609183adf7
    ports:
      - "30000:3000"
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - /volume1/docker/grafana/grafana.ini:/etc/grafana/grafana.ini
      - /volume1/docker/grafana/ldap.toml
      - /volume1/docker/grafana/grafana_data:/var/lib/grafana
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/cert.pem:ro
    env_file: .grafana.env
    environment: {}
    networks:
      - prometheus_default
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -s -m 10 localhost:3000/api/health || exit 1"]
      interval: 1m
      timeout: 5s
      retries: 5
      start_period: 5m
    labels: 
      - "diun.enable=true"
    depends_on:
      - grafana_db
  grafana_db:
    container_name: grafana_db
    image: postgres:17.6@sha256:e6a4209d1a4893f2df3bdcde58f8926c3c929c4d51df90990ed1b36d83c1382a
    ports:
      - "30020:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "psql -U grafana -c 'select 1;' || exit 1"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 2m
    env_file: .pg.env
    environment:
      POSTGRES_USER: grafana
      POSTGRES_DB: grafana
    networks:
      - prometheus_default
    volumes:
      - /volume1/docker/grafana/pg_data:/var/lib/postgresql/data
#  migrate_db:
#    container_name: pgloader
#    image: ghcr.io/dimitri/pgloader:latest@sha256:6585a3f220220ae79a31671cae5d3dcf382f495d3c42516af74f38af681f8c20
#    command:
#      - sleep
#      - infinity
#    networks:
#      - prometheus_default
#    volumes:
#      - /volume1/docker/grafana/grafana_data:/data
#    depends_on:
#      - grafana_db
#  grafana_renderer:
#    container_name: grafana_renderer
#    image: grafana/grafana-image-renderer
#    ports:
#      - 30081:8081
#    networks:
#      - prometheus_default
#    extra_hosts:
#      - host.docker.internal:host-gateway
#    restart: always
#    labels: 
#      - "diun.enable=true"
#    deploy:
#      restart_policy:
#        condition: any
networks:
  prometheus_default:
    external: true
